name: Build
on:
  workflow_call:
    inputs:

      dotnet-version:
        type: string
        default: '9.0.x'
        description: '.NET SDK version to use'

      debug-output:
        description: "Enable verbose debug output to aid troubleshooting"
        type: boolean
        required: false
        default: false

    outputs:

      build_success:
        description: "Indicates if the project builds successfully"
        value: ${{ jobs.build.outputs.success }}

jobs:
  build:
    name: Build Solution
    runs-on: ubuntu-latest
    outputs:
      success: ${{ steps.build_step.outcome == 'success' }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ inputs.dotnet-version }}

    - name: "Cache NuGet packages"
      uses: actions/cache@v4
      continue-on-error: true
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json', '**/*.csproj', '**/*.sln') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Build
      id: build_step
      continue-on-error: true
      run: dotnet build

    - name: Upload build artifacts
      if: steps.build_step.outcome == 'success'
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: |
          **/bin

    - name: Add build summary
      if: always()
      run: |
        echo "### Build Results" >> $GITHUB_STEP_SUMMARY
        if [ ${{ steps.build_step.outcome }} == 'success' ]; then
          echo "Build successful" >> $GITHUB_STEP_SUMMARY
        else
          echo "Build failed" >> $GITHUB_STEP_SUMMARY
        fi
        
    - name: "Check for build failures"
      if: steps.build_step.outcome == 'failure'
      run: exit 1